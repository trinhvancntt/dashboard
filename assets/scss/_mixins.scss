// ========================================
// SASS MIXINS
// ========================================

// Media Queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: $breakpoint-xs) { @content; }
  }
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
  @if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) { @content; }
  }
}

@mixin respond-below($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-xs - 1px}) { @content; }
  }
  @if $breakpoint == sm {
    @media (max-width: #{$breakpoint-sm - 1px}) { @content; }
  }
  @if $breakpoint == md {
    @media (max-width: #{$breakpoint-md - 1px}) { @content; }
  }
  @if $breakpoint == lg {
    @media (max-width: #{$breakpoint-lg - 1px}) { @content; }
  }
  @if $breakpoint == xl {
    @media (max-width: #{$breakpoint-xl - 1px}) { @content; }
  }
  @if $breakpoint == 2xl {
    @media (max-width: #{$breakpoint-2xl - 1px}) { @content; }
  }
}

// Container
@mixin container {
  width: 100%;
  max-width: $container-max-width + 32;
  margin: 0 auto;
  padding: 0 $container-padding;
  
  @include respond-to(md) {
    padding: 0 $spacing-4;
  }
  
  @include respond-to(lg) {
    padding: 0 $spacing-4;
  }
}

// Flexbox
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  @include flex-column;
  align-items: center;
  justify-content: center;
}

// Grid
@mixin grid($columns: 1, $gap: $grid-gutter-width) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

@mixin grid-responsive($mobile: 1, $tablet: 2, $desktop: 3) {
  @include grid($mobile);
  
  @include respond-to(md) {
    grid-template-columns: repeat($tablet, 1fr);
  }
  
  @include respond-to(lg) {
    grid-template-columns: repeat($desktop, 1fr);
  }
}

// Typography
@mixin heading-style($size: $font-size-2xl, $weight: $font-weight-bold, $color: $color-black) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: $line-height-tight;
  margin: 0 0 $spacing-4 0;
}

@mixin text-style($size: $font-size-base, $weight: $font-weight-normal, $color: $color-gray) {
  font-size: $size;
  font-weight: $weight;
  color: $color;
  line-height: $line-height-normal;
  margin: 0 0 $spacing-4 0;
}

// Buttons
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-3 $spacing-6;
  border: none;
  border-radius: $border-radius;
  font-family: $font-family-primary;
  font-size: $font-size-base;
  font-weight: $font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: all $transition-normal;
  will-change: transform, background-color;
  
  &:hover {
    transform: translateY(-2px);
  }
  
  &:active {
    transform: translateY(0);
  }
  
  &:focus {
    outline: 2px solid $color-primary;
    outline-offset: 2px;
  }
}

@mixin button-primary {
  @include button-base;
  background-color: $color-primary;
  color: $color-white;
  
  &:hover {
    background-color: $color-primary-light;
    color: $color-white;
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: transparent;
  color: $color-primary;
  border: 2px solid $color-primary;
  
  &:hover {
    background-color: $color-primary;
    color: $color-white;
  }
}

// Cards
@mixin card {
  background-color: $color-white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  padding: $spacing-4;
  transition: all $transition-normal;
  
  &:hover {
    box-shadow: $shadow-lg;
    transform: translateY(-4px);
  }
}

// Icons
@mixin icon-size($size: 24px) {
  width: $size;
  height: $size;
  flex-shrink: 0;
}

// Animations
@mixin fade-in-up($delay: 0s) {
  opacity: 0;
  transform: translateY(30px);
  animation: fadeInUp 0.8s ease-out $delay forwards;
}

@mixin fade-in-left($delay: 0s) {
  opacity: 0;
  transform: translateX(-30px);
  animation: fadeInLeft 0.8s ease-out $delay forwards;
}

@mixin fade-in-right($delay: 0s) {
  opacity: 0;
  transform: translateX(30px);
  animation: fadeInRight 0.8s ease-out $delay forwards;
}

// Accessibility
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin focus-visible {
  &:focus-visible {
    outline: 2px solid $color-primary;
    outline-offset: 2px;
  }
}

// Utilities
@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin aspect-ratio($width, $height) {
  position: relative;
  
  &::before {
    content: "";
    display: block;
    padding-top: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}
